{"ast":null,"code":"var _jsxFileName = \"/Users/Zak/Documents/Websites/Lego-site/src/components/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropdown = _ref => {\n  _s();\n\n  let {\n    label,\n    options,\n    selected,\n    onSelectedChange\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    const onBodyClick = event => {\n      if (ref.current && ref.current.contains(event.target)) {\n        return;\n      }\n\n      setOpen(false);\n    };\n\n    document.body.addEventListener('click', onBodyClick);\n    return () => {\n      document.body.removeEventListener('click', onBodyClick);\n    };\n  }, []);\n  const renderedOptions = options.map(option => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      onClick: () => onSelectedChange(option),\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"ui form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setOpen(!open),\n        className: `ui selection dropdown ${open ? 'visible active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: selected.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `menu ${open ? 'visible transition' : ''}`,\n          children: renderedOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dropdown, \"wl9VvfhnMVWQ+kCekFjcRPEi3/0=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/Zak/Documents/Websites/Lego-site/src/components/Dropdown.js"],"names":["React","useState","useEffect","useRef","Dropdown","label","options","selected","onSelectedChange","open","setOpen","ref","onBodyClick","event","current","contains","target","document","body","addEventListener","removeEventListener","renderedOptions","map","option","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAGA,MAAMC,QAAQ,GAAG,QAAoD;AAAA;;AAAA,MAAnD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA;AAA5B,GAAmD;AACnE,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAMU,GAAG,GAAGR,MAAM,EAAlB;AAEFD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,WAAW,GAAIC,KAAD,IAAW;AAC9B,UAAIF,GAAG,CAACG,OAAJ,IAAeH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAAnB,EAAuD;AACpD;AACD;;AAEDN,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KAND;;AAQAO,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCP,WAAxC;AAEA,WAAO,MAAM;AACXK,MAAAA,QAAQ,CAACC,IAAT,CAAcE,mBAAd,CAAkC,OAAlC,EAA2CR,WAA3C;AACD,KAFD;AAGD,GAdM,EAcJ,EAdI,CAAT;AAgBE,QAAMS,eAAe,GAAGf,OAAO,CAACgB,GAAR,CAAaC,MAAD,IAAY;AAC9C,QAAIA,MAAM,CAACC,KAAP,KAAiBjB,QAAQ,CAACiB,KAA9B,EAAqC;AACnC,aAAO,IAAP;AACD;;AAED,wBACE;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,OAAO,EAAE,MAAKhB,gBAAgB,CAACe,MAAD,CAHhC;AAAA,gBAKGA,MAAM,CAAClB;AALV,OACOkB,MAAM,CAACC,KADd;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAduB,CAAxB;AAkBA,sBACE;AAAK,IAAA,GAAG,EAAIb,GAAZ;AAAiB,IAAA,SAAS,EAAC,SAA3B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,kBAA2BN;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,OAAO,EAAE,MAAMK,OAAO,CAAC,CAACD,IAAF,CAA3B;AAAoC,QAAA,SAAS,EAAG,yBAAwBA,IAAI,GAAG,gBAAH,GAAsB,EAAG,EAArG;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBF,QAAQ,CAACF;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAG,QAAOI,IAAI,GAAG,oBAAH,GAAyB,EAAG,EAAxD;AAAA,oBACGY;AADH;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CApDD;;GAAMjB,Q;;KAAAA,Q;AAsDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n\nconst Dropdown = ({ label, options, selected, onSelectedChange }) => {\n  const[open, setOpen] = useState(false);\n  const ref = useRef();\n\nuseEffect(() => {\n    const onBodyClick = (event) => {\n     if (ref.current && ref.current.contains(event.target)) {\n        return;\n      }\n\n      setOpen(false);\n    };\n\n    document.body.addEventListener('click', onBodyClick);\n\n    return () => {\n      document.body.removeEventListener('click', onBodyClick);\n    };\n  }, []);\n\n  const renderedOptions = options.map((option) => {\n    if (option.value === selected.value) {\n      return null;\n    }\n\n    return (\n      <div\n        key={option.value}\n        className=\"item\"\n        onClick={()=> onSelectedChange(option)}\n      >\n        {option.label}\n      </div>\n      );\n  });\n\n\n\n  return (\n    <div ref = {ref} className=\"ui form\">\n      <div className=\"field\">\n        <label className=\"label\">{ label }</label>\n        <div onClick={() => setOpen(!open)} className={`ui selection dropdown ${open ? 'visible active' : ''}`}>\n          <i className=\"dropdown icon\"></i>\n          <div className=\"text\">{selected.label}</div>\n          <div className={`menu ${open ? 'visible transition': ''}`}>\n            {renderedOptions}\n          </div>\n        </div>\n      </div>\n    </div>\n    );\n};\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}