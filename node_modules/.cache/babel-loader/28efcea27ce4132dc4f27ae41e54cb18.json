{"ast":null,"code":"var _jsxFileName = \"/Users/Zak/Documents/Websites/Lego-site/src/components/Chart.js\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = {\n  // labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n  datasets: [{\n    label: '# of Votes',\n    data: [12, 19, 3, 5, 2, 3],\n    backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n    borderWidth: 1\n  }]\n}; // console.log(data);\n\nconst Chart = ({\n  videos\n}) => {\n  //Make labels from themes of object\n  console.log(videos);\n  const themes = new Set(videos.flatMap(videos => {\n    return videos.THEME.toString().toLowerCase().split(' ');\n  })); // console.log(Array.from(themes));\n\n  data.labels = Array.from(themes); //Count the number of each theme\n  // console.log(data.datasets[0].data);\n\n  const counts = data.labels.map(label => {\n    const themeList = videos.map(video => video.THEME); // console.log(themeList);\n\n    const count = themeList.filter(video => video.includes(label));\n    console.log(count);\n    return count.length;\n  });\n  data.datasets[0].data = counts;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/Zak/Documents/Websites/Lego-site/src/components/Chart.js"],"names":["React","Doughnut","data","datasets","label","backgroundColor","borderColor","borderWidth","Chart","videos","console","log","themes","Set","flatMap","THEME","toString","toLowerCase","split","labels","Array","from","counts","map","themeList","video","count","filter","includes","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;;AAEA,MAAMC,IAAI,GAAG;AACT;AACAC,EAAAA,QAAQ,EAAE,CAAC;AACPC,IAAAA,KAAK,EAAE,YADA;AAEPF,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFC;AAGPG,IAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,IAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,IAAAA,WAAW,EAAE;AAnBN,GAAD;AAFD,CAAb,C,CAyBA;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAE1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,QAAMG,MAAM,GAAG,IAAIC,GAAJ,CAAQJ,MAAM,CAACK,OAAP,CAAgBL,MAAD,IAAY;AAC9C,WAAQA,MAAM,CAACM,KAAP,CAAaC,QAAb,GAAwBC,WAAxB,GAAsCC,KAAtC,CAA4C,GAA5C,CAAR;AACH,GAFsB,CAAR,CAAf,CAJ0B,CAO1B;;AACAhB,EAAAA,IAAI,CAACiB,MAAL,GAAcC,KAAK,CAACC,IAAN,CAAWT,MAAX,CAAd,CAR0B,CAU1B;AACA;;AACA,QAAMU,MAAM,GAAGpB,IAAI,CAACiB,MAAL,CAAYI,GAAZ,CAAgBnB,KAAK,IAAI;AACpC,UAAMoB,SAAS,GAAEf,MAAM,CAACc,GAAP,CAAWE,KAAK,IAAIA,KAAK,CAACV,KAA1B,CAAjB,CADoC,CAEpC;;AACA,UAAMW,KAAK,GAAGF,SAAS,CAACG,MAAV,CAAiBF,KAAK,IAAIA,KAAK,CAACG,QAAN,CAAexB,KAAf,CAA1B,CAAd;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACF,WAAQA,KAAK,CAACG,MAAd;AACD,GANc,CAAf;AAOA3B,EAAAA,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBD,IAAjB,GAAsBoB,MAAtB;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACF;AAAI,QAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YADF,oBAGK,QACH,QADG;AACM,MAAA,IAAI,EAAKpB;AADf;AAAA;AAAA;AAAA;AAAA,YAHL;AAAA,kBADF;AASH,CA7BD;;KAAMM,K;AA+BN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst data = {\n    // labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n    datasets: [{\n        label: '# of Votes',\n        data: [12, 19, 3, 5, 2, 3],\n        backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(255, 159, 64, 0.2)',\n        ],\n        borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n            'rgba(153, 102, 255, 1)',\n            'rgba(255, 159, 64, 1)',\n        ],\n        borderWidth: 1,\n    }, ],\n};\n\n// console.log(data);\n\n\nconst Chart = ({ videos }) => {\n\n    //Make labels from themes of object\n    console.log(videos)\n    const themes = new Set(videos.flatMap((videos) => {\n        return (videos.THEME.toString().toLowerCase().split(' '))\n    }));\n    // console.log(Array.from(themes));\n    data.labels = Array.from(themes);\n\n    //Count the number of each theme\n    // console.log(data.datasets[0].data);\n    const counts = data.labels.map(label => {\n        const themeList= videos.map(video => video.THEME);\n        // console.log(themeList);\n        const count = themeList.filter(video => video.includes(label))\n        console.log(count);\n      return (count.length)\n    });\n    data.datasets[0].data=counts;\n    return (\n      <>\n        <div className='header'>\n      <h1 className='title'></h1>\n    </div> <\n        Doughnut data = { data }\n        />\n        </>\n    )\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}